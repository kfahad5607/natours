{"id":"../../node_modules/a_mock/partialMock/setExecute.js","dependencies":[{"name":"C:\\JavaScript\\node js prac\\complete-node-bootcamp-master\\4-natours\\starter\\package.json","includedInParent":true,"mtime":1600353944122},{"name":"C:\\JavaScript\\node js prac\\complete-node-bootcamp-master\\4-natours\\starter\\node_modules\\a_mock\\package.json","includedInParent":true,"mtime":1600353942830},{"name":"../and","loc":{"line":2,"column":20},"parent":"C:\\JavaScript\\node js prac\\complete-node-bootcamp-master\\4-natours\\starter\\node_modules\\a_mock\\partialMock\\setExecute.js","resolved":"C:\\JavaScript\\node js prac\\complete-node-bootcamp-master\\4-natours\\starter\\node_modules\\a_mock\\and.js"},{"name":"../newTrueNTimesThenFalse","loc":{"line":3,"column":35},"parent":"C:\\JavaScript\\node js prac\\complete-node-bootcamp-master\\4-natours\\starter\\node_modules\\a_mock\\partialMock\\setExecute.js","resolved":"C:\\JavaScript\\node js prac\\complete-node-bootcamp-master\\4-natours\\starter\\node_modules\\a_mock\\newTrueNTimesThenFalse.js"},{"name":"./newExecute","loc":{"line":4,"column":26},"parent":"C:\\JavaScript\\node js prac\\complete-node-bootcamp-master\\4-natours\\starter\\node_modules\\a_mock\\partialMock\\setExecute.js","resolved":"C:\\JavaScript\\node js prac\\complete-node-bootcamp-master\\4-natours\\starter\\node_modules\\a_mock\\partialMock\\newExecute.js"},{"name":"./negotiateIncrementExpectCount","loc":{"line":5,"column":45},"parent":"C:\\JavaScript\\node js prac\\complete-node-bootcamp-master\\4-natours\\starter\\node_modules\\a_mock\\partialMock\\setExecute.js","resolved":"C:\\JavaScript\\node js prac\\complete-node-bootcamp-master\\4-natours\\starter\\node_modules\\a_mock\\partialMock\\negotiateIncrementExpectCount.js"}],"generated":{"js":"function setExecute(returnValue,hasCorrectArguments,mockContext,times) {\t\n\tvar and  = require('../and');\n\tvar trueNTimesThenFalse = require('../newTrueNTimesThenFalse')(times);\n\tvar newExecute = require('./newExecute');\n\tvar negotiateIncrementExpectCount = require('./negotiateIncrementExpectCount');\n\t\n\tand = and.add(mockContext.compositeAreCorrectArguments);\n\tand = and.add(trueNTimesThenFalse);\n\tvar lastExecute = mockContext.lastExecute;\n\tvar execute = newExecute(returnValue,and,mockContext,times);\n\tmockContext.lastExecute = execute;\n\tlastExecute.setFallback(execute);\n\tnegotiateIncrementExpectCount(times,mockContext);\n}\n\nmodule.exports = setExecute;"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/a_mock/partialMock/setExecute.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/a_mock/partialMock/setExecute.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/a_mock/partialMock/setExecute.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/a_mock/partialMock/setExecute.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/a_mock/partialMock/setExecute.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/a_mock/partialMock/setExecute.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/a_mock/partialMock/setExecute.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/a_mock/partialMock/setExecute.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/a_mock/partialMock/setExecute.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/a_mock/partialMock/setExecute.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/a_mock/partialMock/setExecute.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/a_mock/partialMock/setExecute.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/a_mock/partialMock/setExecute.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/a_mock/partialMock/setExecute.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/a_mock/partialMock/setExecute.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/a_mock/partialMock/setExecute.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}}],"sources":{"../../node_modules/a_mock/partialMock/setExecute.js":"function setExecute(returnValue,hasCorrectArguments,mockContext,times) {\t\n\tvar and  = require('../and');\n\tvar trueNTimesThenFalse = require('../newTrueNTimesThenFalse')(times);\n\tvar newExecute = require('./newExecute');\n\tvar negotiateIncrementExpectCount = require('./negotiateIncrementExpectCount');\n\t\n\tand = and.add(mockContext.compositeAreCorrectArguments);\n\tand = and.add(trueNTimesThenFalse);\n\tvar lastExecute = mockContext.lastExecute;\n\tvar execute = newExecute(returnValue,and,mockContext,times);\n\tmockContext.lastExecute = execute;\n\tlastExecute.setFallback(execute);\n\tnegotiateIncrementExpectCount(times,mockContext);\n}\n\nmodule.exports = setExecute;"},"lineCount":16}},"error":null,"hash":"bb6ee02ea9507b355ed6a687fe211efb","cacheData":{"env":{}}}